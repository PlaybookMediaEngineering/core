/* tslint:disable */
/* eslint-disable */
/**
 * Social Service
 * Solomon AI Social Service
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InternalErrorMessageResponse,
  PathUnknownErrorMessageResponse,
  ReadynessCheckResponse,
  Status,
  ValidationErrorMessageResponse,
} from '../models/index';
import {
    InternalErrorMessageResponseFromJSON,
    InternalErrorMessageResponseToJSON,
    PathUnknownErrorMessageResponseFromJSON,
    PathUnknownErrorMessageResponseToJSON,
    ReadynessCheckResponseFromJSON,
    ReadynessCheckResponseToJSON,
    StatusFromJSON,
    StatusToJSON,
    ValidationErrorMessageResponseFromJSON,
    ValidationErrorMessageResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class ServiceReadynessApi extends runtime.BaseAPI {

    /**
     * This endpoint performs a readiness check on the service
     * readyness check
     */
    async readynessCheckRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReadynessCheckResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/ready`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadynessCheckResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint performs a readiness check on the service
     * readyness check
     */
    async readynessCheck(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReadynessCheckResponse> {
        const response = await this.readynessCheckRaw(initOverrides);
        return await response.value();
    }

}
