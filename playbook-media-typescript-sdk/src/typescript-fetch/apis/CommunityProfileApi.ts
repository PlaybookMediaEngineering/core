/* tslint:disable */
/* eslint-disable */
/**
 * Social Service
 * Solomon AI Social Service
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CommunityProfile,
  CreateCommunityProfileBody,
  CreateCommunityProfileResponse,
  DeleteCommunityProfileResponse,
  EditCommunityProfileRequest,
  GetCommunitiesUserFollowsResponse,
  GetCommunityProfileResponse,
  GetCommunityProfilesResponse,
  InternalErrorMessageResponse,
  PathUnknownErrorMessageResponse,
  Status,
  ValidationErrorMessageResponse,
} from '../models/index';
import {
    CommunityProfileFromJSON,
    CommunityProfileToJSON,
    CreateCommunityProfileBodyFromJSON,
    CreateCommunityProfileBodyToJSON,
    CreateCommunityProfileResponseFromJSON,
    CreateCommunityProfileResponseToJSON,
    DeleteCommunityProfileResponseFromJSON,
    DeleteCommunityProfileResponseToJSON,
    EditCommunityProfileRequestFromJSON,
    EditCommunityProfileRequestToJSON,
    GetCommunitiesUserFollowsResponseFromJSON,
    GetCommunitiesUserFollowsResponseToJSON,
    GetCommunityProfileResponseFromJSON,
    GetCommunityProfileResponseToJSON,
    GetCommunityProfilesResponseFromJSON,
    GetCommunityProfilesResponseToJSON,
    InternalErrorMessageResponseFromJSON,
    InternalErrorMessageResponseToJSON,
    PathUnknownErrorMessageResponseFromJSON,
    PathUnknownErrorMessageResponseToJSON,
    StatusFromJSON,
    StatusToJSON,
    ValidationErrorMessageResponseFromJSON,
    ValidationErrorMessageResponseToJSON,
} from '../models/index';

export interface CreateCommunityProfileRequest {
    userId: string;
    createCommunityProfileBody: CreateCommunityProfileBody;
}

export interface DeleteCommunityProfileRequest {
    userId: string;
    communityProfileId: string;
}

export interface EditCommunityProfileOperationRequest {
    userId: string;
    communityProfileId: string;
    communityProfile: CommunityProfile;
}

export interface GetCommunitiesUserFollowsRequest {
    userId: string;
    limit: string;
}

export interface GetCommunityProfileRequest {
    communityId: string;
    requestorProfileId: string;
    requestorProfileType: GetCommunityProfileRequestorProfileTypeEnum;
}

export interface GetCommunityProfilesRequest {
    pageSize: number;
    pageNumber: number;
}

/**
 * 
 */
export class CommunityProfileApi extends runtime.BaseAPI {

    /**
     * This endpoint enables a client to create a community profile
     * Create a community Profile
     */
    async createCommunityProfileRaw(requestParameters: CreateCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateCommunityProfileResponse>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling createCommunityProfile.');
        }

        if (requestParameters.createCommunityProfileBody === null || requestParameters.createCommunityProfileBody === undefined) {
            throw new runtime.RequiredError('createCommunityProfileBody','Required parameter requestParameters.createCommunityProfileBody was null or undefined when calling createCommunityProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/community-profiles/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCommunityProfileBodyToJSON(requestParameters.createCommunityProfileBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCommunityProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to create a community profile
     * Create a community Profile
     */
    async createCommunityProfile(requestParameters: CreateCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateCommunityProfileResponse> {
        const response = await this.createCommunityProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to delete a community profile
     * Delete Community Profile
     */
    async deleteCommunityProfileRaw(requestParameters: DeleteCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteCommunityProfileResponse>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling deleteCommunityProfile.');
        }

        if (requestParameters.communityProfileId === null || requestParameters.communityProfileId === undefined) {
            throw new runtime.RequiredError('communityProfileId','Required parameter requestParameters.communityProfileId was null or undefined when calling deleteCommunityProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/users/{userId}/community-profiles/{communityProfileId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))).replace(`{${"communityProfileId"}}`, encodeURIComponent(String(requestParameters.communityProfileId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteCommunityProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to delete a community profile
     * Delete Community Profile
     */
    async deleteCommunityProfile(requestParameters: DeleteCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteCommunityProfileResponse> {
        const response = await this.deleteCommunityProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to update a community profile
     * Edit a community Profile
     */
    async editCommunityProfileRaw(requestParameters: EditCommunityProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EditCommunityProfileRequest>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling editCommunityProfile.');
        }

        if (requestParameters.communityProfileId === null || requestParameters.communityProfileId === undefined) {
            throw new runtime.RequiredError('communityProfileId','Required parameter requestParameters.communityProfileId was null or undefined when calling editCommunityProfile.');
        }

        if (requestParameters.communityProfile === null || requestParameters.communityProfile === undefined) {
            throw new runtime.RequiredError('communityProfile','Required parameter requestParameters.communityProfile was null or undefined when calling editCommunityProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/users/{userId}/community-profiles/{communityProfileId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))).replace(`{${"communityProfileId"}}`, encodeURIComponent(String(requestParameters.communityProfileId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CommunityProfileToJSON(requestParameters.communityProfile),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EditCommunityProfileRequestFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to update a community profile
     * Edit a community Profile
     */
    async editCommunityProfile(requestParameters: EditCommunityProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EditCommunityProfileRequest> {
        const response = await this.editCommunityProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to get all the communities a user follows
     * Gets all the communities a user follows
     */
    async getCommunitiesUserFollowsRaw(requestParameters: GetCommunitiesUserFollowsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCommunitiesUserFollowsResponse>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling getCommunitiesUserFollows.');
        }

        if (requestParameters.limit === null || requestParameters.limit === undefined) {
            throw new runtime.RequiredError('limit','Required parameter requestParameters.limit was null or undefined when calling getCommunitiesUserFollows.');
        }

        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/users/{userId}/communities-followed`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCommunitiesUserFollowsResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to get all the communities a user follows
     * Gets all the communities a user follows
     */
    async getCommunitiesUserFollows(requestParameters: GetCommunitiesUserFollowsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCommunitiesUserFollowsResponse> {
        const response = await this.getCommunitiesUserFollowsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to get a community profile
     * Get a community Profile
     */
    async getCommunityProfileRaw(requestParameters: GetCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCommunityProfileResponse>> {
        if (requestParameters.communityId === null || requestParameters.communityId === undefined) {
            throw new runtime.RequiredError('communityId','Required parameter requestParameters.communityId was null or undefined when calling getCommunityProfile.');
        }

        if (requestParameters.requestorProfileId === null || requestParameters.requestorProfileId === undefined) {
            throw new runtime.RequiredError('requestorProfileId','Required parameter requestParameters.requestorProfileId was null or undefined when calling getCommunityProfile.');
        }

        if (requestParameters.requestorProfileType === null || requestParameters.requestorProfileType === undefined) {
            throw new runtime.RequiredError('requestorProfileType','Required parameter requestParameters.requestorProfileType was null or undefined when calling getCommunityProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/social/community-profiles/{communityId}/requestor/{requestorProfileId}/profile-type/{requestorProfileType}`.replace(`{${"communityId"}}`, encodeURIComponent(String(requestParameters.communityId))).replace(`{${"requestorProfileId"}}`, encodeURIComponent(String(requestParameters.requestorProfileId))).replace(`{${"requestorProfileType"}}`, encodeURIComponent(String(requestParameters.requestorProfileType))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCommunityProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to get a community profile
     * Get a community Profile
     */
    async getCommunityProfile(requestParameters: GetCommunityProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCommunityProfileResponse> {
        const response = await this.getCommunityProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to get community profiles
     * Get Community Profiles
     */
    async getCommunityProfilesRaw(requestParameters: GetCommunityProfilesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCommunityProfilesResponse>> {
        if (requestParameters.pageSize === null || requestParameters.pageSize === undefined) {
            throw new runtime.RequiredError('pageSize','Required parameter requestParameters.pageSize was null or undefined when calling getCommunityProfiles.');
        }

        if (requestParameters.pageNumber === null || requestParameters.pageNumber === undefined) {
            throw new runtime.RequiredError('pageNumber','Required parameter requestParameters.pageNumber was null or undefined when calling getCommunityProfiles.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/community-profiles/page-size/{pageSize}/page-number/{pageNumber}`.replace(`{${"pageSize"}}`, encodeURIComponent(String(requestParameters.pageSize))).replace(`{${"pageNumber"}}`, encodeURIComponent(String(requestParameters.pageNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCommunityProfilesResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to get community profiles
     * Get Community Profiles
     */
    async getCommunityProfiles(requestParameters: GetCommunityProfilesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCommunityProfilesResponse> {
        const response = await this.getCommunityProfilesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetCommunityProfileRequestorProfileTypeEnum = {
    Unspecified: 'ACCOUNT_TYPE_UNSPECIFIED',
    User: 'ACCOUNT_TYPE_USER',
    Community: 'ACCOUNT_TYPE_COMMUNITY'
} as const;
export type GetCommunityProfileRequestorProfileTypeEnum = typeof GetCommunityProfileRequestorProfileTypeEnum[keyof typeof GetCommunityProfileRequestorProfileTypeEnum];
