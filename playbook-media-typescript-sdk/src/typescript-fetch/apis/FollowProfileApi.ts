/* tslint:disable */
/* eslint-disable */
/**
 * Social Service
 * Solomon AI Social Service
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AcceptFollowProfileResponse,
  FollowProfileResponse,
  InternalErrorMessageResponse,
  PathUnknownErrorMessageResponse,
  Status,
  ValidationErrorMessageResponse,
} from '../models/index';
import {
    AcceptFollowProfileResponseFromJSON,
    AcceptFollowProfileResponseToJSON,
    FollowProfileResponseFromJSON,
    FollowProfileResponseToJSON,
    InternalErrorMessageResponseFromJSON,
    InternalErrorMessageResponseToJSON,
    PathUnknownErrorMessageResponseFromJSON,
    PathUnknownErrorMessageResponseToJSON,
    StatusFromJSON,
    StatusToJSON,
    ValidationErrorMessageResponseFromJSON,
    ValidationErrorMessageResponseToJSON,
} from '../models/index';

export interface AcceptFollowProfileRequest {
    followRecordId: string;
}

export interface FollowProfileRequest {
    sourceUserId: string;
    targetUserId: string;
}

/**
 * 
 */
export class FollowProfileApi extends runtime.BaseAPI {

    /**
     * This endpoint enables a client to accept a follow request from a source a user profile
     * Accepts a user\'s follow request
     */
    async acceptFollowProfileRaw(requestParameters: AcceptFollowProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AcceptFollowProfileResponse>> {
        if (requestParameters.followRecordId === null || requestParameters.followRecordId === undefined) {
            throw new runtime.RequiredError('followRecordId','Required parameter requestParameters.followRecordId was null or undefined when calling acceptFollowProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/follow-requests/{followRecordId}/accept`.replace(`{${"followRecordId"}}`, encodeURIComponent(String(requestParameters.followRecordId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AcceptFollowProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to accept a follow request from a source a user profile
     * Accepts a user\'s follow request
     */
    async acceptFollowProfile(requestParameters: AcceptFollowProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AcceptFollowProfileResponse> {
        const response = await this.acceptFollowProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint enables a client to follow a user profile
     * follow a user profile
     */
    async followProfileRaw(requestParameters: FollowProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FollowProfileResponse>> {
        if (requestParameters.sourceUserId === null || requestParameters.sourceUserId === undefined) {
            throw new runtime.RequiredError('sourceUserId','Required parameter requestParameters.sourceUserId was null or undefined when calling followProfile.');
        }

        if (requestParameters.targetUserId === null || requestParameters.targetUserId === undefined) {
            throw new runtime.RequiredError('targetUserId','Required parameter requestParameters.targetUserId was null or undefined when calling followProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/users/source/{sourceUserId}/follow/target/{targetUserId}`.replace(`{${"sourceUserId"}}`, encodeURIComponent(String(requestParameters.sourceUserId))).replace(`{${"targetUserId"}}`, encodeURIComponent(String(requestParameters.targetUserId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FollowProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint enables a client to follow a user profile
     * follow a user profile
     */
    async followProfile(requestParameters: FollowProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FollowProfileResponse> {
        const response = await this.followProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
