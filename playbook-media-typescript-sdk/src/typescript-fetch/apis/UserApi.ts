/* tslint:disable */
/* eslint-disable */
/**
 * Social Service
 * Solomon AI Social Service
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EditUserProfileResponse,
  InternalErrorMessageResponse,
  PathUnknownErrorMessageResponse,
  Status,
  UserProfile,
  ValidationErrorMessageResponse,
} from '../models/index';
import {
    EditUserProfileResponseFromJSON,
    EditUserProfileResponseToJSON,
    InternalErrorMessageResponseFromJSON,
    InternalErrorMessageResponseToJSON,
    PathUnknownErrorMessageResponseFromJSON,
    PathUnknownErrorMessageResponseToJSON,
    StatusFromJSON,
    StatusToJSON,
    UserProfileFromJSON,
    UserProfileToJSON,
    ValidationErrorMessageResponseFromJSON,
    ValidationErrorMessageResponseToJSON,
} from '../models/index';

export interface EditUserProfileRequest {
    userId: string;
    userProfile: UserProfile;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     * This endpoint performs an updates operation on a user profile based on the provided parametersThis update operation can span multiple services on specific cases (such as when the client is explicitly attempting to update the email of the user)All update operations are atomic by nature hence we should not expect any form of divergent state
     * update a user profile
     */
    async editUserProfileRaw(requestParameters: EditUserProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EditUserProfileResponse>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling editUserProfile.');
        }

        if (requestParameters.userProfile === null || requestParameters.userProfile === undefined) {
            throw new runtime.RequiredError('userProfile','Required parameter requestParameters.userProfile was null or undefined when calling editUserProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/users/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UserProfileToJSON(requestParameters.userProfile),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EditUserProfileResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint performs an updates operation on a user profile based on the provided parametersThis update operation can span multiple services on specific cases (such as when the client is explicitly attempting to update the email of the user)All update operations are atomic by nature hence we should not expect any form of divergent state
     * update a user profile
     */
    async editUserProfile(requestParameters: EditUserProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EditUserProfileResponse> {
        const response = await this.editUserProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
