/* tslint:disable */
/* eslint-disable */
/**
 * Social Service
 * Solomon AI Social Service
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PollPost } from './PollPost';
import {
    PollPostFromJSON,
    PollPostFromJSONTyped,
    PollPostToJSON,
} from './PollPost';
import type { Post } from './Post';
import {
    PostFromJSON,
    PostFromJSONTyped,
    PostToJSON,
} from './Post';

/**
 * 
 * @export
 * @interface SetPostInDraftModeResponse
 */
export interface SetPostInDraftModeResponse {
    /**
     * 
     * @type {Post}
     * @memberof SetPostInDraftModeResponse
     */
    regularPost?: Post;
    /**
     * 
     * @type {PollPost}
     * @memberof SetPostInDraftModeResponse
     */
    pollPost?: PollPost;
    /**
     * 
     * @type {boolean}
     * @memberof SetPostInDraftModeResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the SetPostInDraftModeResponse interface.
 */
export function instanceOfSetPostInDraftModeResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SetPostInDraftModeResponseFromJSON(json: any): SetPostInDraftModeResponse {
    return SetPostInDraftModeResponseFromJSONTyped(json, false);
}

export function SetPostInDraftModeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPostInDraftModeResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'regularPost': !exists(json, 'regularPost') ? undefined : PostFromJSON(json['regularPost']),
        'pollPost': !exists(json, 'pollPost') ? undefined : PollPostFromJSON(json['pollPost']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function SetPostInDraftModeResponseToJSON(value?: SetPostInDraftModeResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'regularPost': PostToJSON(value.regularPost),
        'pollPost': PollPostToJSON(value.pollPost),
        'success': value.success,
    };
}

